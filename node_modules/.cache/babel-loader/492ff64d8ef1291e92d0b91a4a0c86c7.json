{"ast":null,"code":"import _classCallCheck from \"/var/www/html/learning-react/react-threeJS/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/learning-react/react-threeJS/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/learning-react/react-threeJS/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/learning-react/react-threeJS/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/learning-react/react-threeJS/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/learning-react/react-threeJS/src/components/canvas/CanvasObj.js\";\nimport React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport * as OBJLoader from \"three-obj-loader\";\nimport model0 from \"../../assets/models/dummy.obj\";\nimport model1 from \"../../assets/models/cube.obj\"; //putting models in an array\n\nvar models = [];\nmodels.push(model0);\nmodels.push(model1);\nOBJLoader(THREE);\n\nvar CanvasObj =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CanvasObj, _Component);\n\n  function CanvasObj(props) {\n    var _this;\n\n    _classCallCheck(this, CanvasObj);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CanvasObj).call(this, props));\n\n    _this.start = function () {\n      if (!_this.frameId) {\n        _this.frameId = requestAnimationFrame(_this.animate);\n      }\n    };\n\n    _this.stop = function () {\n      cancelAnimationFrame(_this.frameId);\n    };\n\n    _this.loadGeo = function () {\n      console.log(_this.props.model);\n\n      if (_this.props.model === \"Dummy\") {\n        if (_this.scene.children.length > 0) {\n          console.log(_this.scene.children);\n        }\n\n        _this.loader.load( // resource URL\n        models[0], // called when resource is loaded\n        function (object) {\n          object.position.set(0, -0.5, 0);\n          object.scale.set(0.01, 0.01, 0.01);\n\n          _this.scene.add(object);\n        }, // called when loading is in progresses\n        function (xhr) {\n          console.log(xhr.loaded / xhr.total * 100 + \"% loaded\");\n        }, // called when loading has errorss\n        function (error) {\n          console.log(\"An error happened\");\n        });\n      } else {\n        _this.loader.load( // resource URL\n        models[1], // called when resource is loaded\n        function (object) {\n          console.log(object, _this.props.model);\n          object.position.set(0, -0.5, 0);\n          object.scale.set(0.01, 0.01, 0.01);\n\n          _this.scene.add(object);\n        }, // called when loading is in progresses\n        function (xhr) {\n          console.log(xhr.loaded / xhr.total * 100 + \"% loaded\");\n        }, // called when loading has errors\n        function (error) {\n          console.log(\"An error happened\");\n        });\n      }\n    };\n\n    _this.animate = function () {\n      _this.cube.rotation.x += 0.01;\n      _this.cube.rotation.y += 0.01;\n\n      _this.renderScene();\n\n      _this.frameId = window.requestAnimationFrame(_this.animate);\n    };\n\n    _this.renderScene = function () {\n      _this.renderer.render(_this.scene, _this.camera);\n    };\n\n    _this.state = {\n      model: props.model\n    };\n    return _this;\n  }\n\n  _createClass(CanvasObj, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.model !== this.props.model) {\n        this.loadGeo();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var width = this.mount.clientWidth;\n      var height = this.mount.clientHeight; //ADD SCENE\n\n      this.scene = new THREE.Scene(); //ADD CAMERA\n\n      this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n      this.camera.position.z = 4;\n      this.scene.add(this.camera); //ADD LIGHT\n\n      this.light = new THREE.DirectionalLight(0xffffff);\n      this.light.position.z = 4;\n      this.light.position.x = 4;\n      this.scene.add(this.light); //load models\n\n      this.THREE = THREE;\n      this.loader = new this.THREE.OBJLoader();\n      this.loadGeo(); //ADD RENDERER\n\n      this.renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      this.renderer.setClearColor(\"#000000\");\n      this.renderer.setSize(width, height);\n      this.mount.appendChild(this.renderer.domElement); //ADD CUBE\n\n      var geometry = new THREE.BoxGeometry(1.3, 1.3, 1.3);\n      var material = new THREE.MeshLambertMaterial({\n        color: \"#88d200\",\n        wireframe: false\n      });\n      this.cube = new THREE.Mesh(geometry, material); // this.scene.add(this.cube);\n\n      this.start();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.stop();\n      this.mount.removeChild(this.renderer.domElement);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"100vh\"\n        },\n        ref: function ref(mount) {\n          _this2.mount = mount;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CanvasObj;\n}(Component);\n\nexport default CanvasObj;","map":{"version":3,"sources":["/var/www/html/learning-react/react-threeJS/src/components/canvas/CanvasObj.js"],"names":["React","Component","THREE","OBJLoader","model0","model1","models","push","CanvasObj","props","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","loadGeo","console","log","model","scene","children","length","loader","load","object","position","set","scale","add","xhr","loaded","total","error","cube","rotation","x","y","renderScene","window","renderer","render","camera","state","nextProps","width","mount","clientWidth","height","clientHeight","Scene","PerspectiveCamera","z","light","DirectionalLight","WebGLRenderer","antialias","setClearColor","setSize","appendChild","domElement","geometry","BoxGeometry","material","MeshLambertMaterial","color","wireframe","Mesh","removeChild"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport * as OBJLoader from \"three-obj-loader\";\n\nimport model0 from \"../../assets/models/dummy.obj\";\nimport model1 from \"../../assets/models/cube.obj\";\n\n//putting models in an array\nconst models = [];\nmodels.push(model0);\nmodels.push(model1);\n\nOBJLoader(THREE);\n\nclass CanvasObj extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      model: props.model\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.model !== this.props.model) {\n      this.loadGeo();\n    }\n  }\n\n  componentDidMount() {\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight;\n    //ADD SCENE\n    this.scene = new THREE.Scene();\n    //ADD CAMERA\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    this.camera.position.z = 4;\n\n    this.scene.add(this.camera);\n    //ADD LIGHT\n    this.light = new THREE.DirectionalLight(0xffffff);\n    this.light.position.z = 4;\n    this.light.position.x = 4;\n\n    this.scene.add(this.light);\n    //load models\n    this.THREE = THREE;\n    this.loader = new this.THREE.OBJLoader();\n    this.loadGeo();\n\n    //ADD RENDERER\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setClearColor(\"#000000\");\n    this.renderer.setSize(width, height);\n    this.mount.appendChild(this.renderer.domElement);\n    //ADD CUBE\n    const geometry = new THREE.BoxGeometry(1.3, 1.3, 1.3);\n    const material = new THREE.MeshLambertMaterial({\n      color: \"#88d200\",\n      wireframe: false\n    });\n    this.cube = new THREE.Mesh(geometry, material);\n    // this.scene.add(this.cube);\n    this.start();\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  start = () => {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  };\n\n  stop = () => {\n    cancelAnimationFrame(this.frameId);\n  };\n\n  loadGeo = () => {\n    console.log(this.props.model);\n\n    if (this.props.model === \"Dummy\") {\n      if(this.scene.children.length > 0){ \n       console.log(this.scene.children); \n    }\n\n      this.loader.load(\n        // resource URL\n        models[0],\n        // called when resource is loaded\n        object => {\n          object.position.set(0, -0.5, 0);\n          object.scale.set(0.01, 0.01, 0.01);\n          this.scene.add(object);\n        },\n        // called when loading is in progresses\n        xhr => {\n          console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\n        },\n        // called when loading has errorss\n        error => {\n          console.log(\"An error happened\");\n        }\n      );\n    } else {\n      this.loader.load(\n        // resource URL\n        models[1],\n        // called when resource is loaded\n        object => {\n          console.log(object, this.props.model);\n          object.position.set(0, -0.5, 0);\n          object.scale.set(0.01, 0.01, 0.01);\n          this.scene.add(object);\n        },\n        // called when loading is in progresses\n        xhr => {\n          console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\n        },\n        // called when loading has errors\n        error => {\n          console.log(\"An error happened\");\n        }\n      );\n    }\n  };\n\n  animate = () => {\n    this.cube.rotation.x += 0.01;\n    this.cube.rotation.y += 0.01;\n    this.renderScene();\n    this.frameId = window.requestAnimationFrame(this.animate);\n  };\n  renderScene = () => {\n    this.renderer.render(this.scene, this.camera);\n  };\n  render() {\n    return (\n      <div\n        style={{ width: \"100%\", height: \"100vh\" }}\n        ref={mount => {\n          this.mount = mount;\n        }}\n      />\n    );\n  }\n}\nexport default CanvasObj;\n"]},"metadata":{},"sourceType":"module"}